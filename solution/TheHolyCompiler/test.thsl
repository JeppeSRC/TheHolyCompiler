
#ifdef VERT

layout (location = 0) in vec3 position;
layout (location = 1) in vec4 colors;
layout (location = 2) in vec2 texCoords;

out vec4 gl_Position = THSL_Position;

layout (location = 0) out vec4 color;
layout (location = 1) out vec2 texCoord;

layout (binding = 0, set = 0) uniform UniformBuffer {
	mat4 projection;
	mat4 model;
};

void main() {
	gl_Position = UniformBuffer.projection * UniformBuffer.model * vec4(position.x, -position.y, position.z, 1.0);	

	color = colors;
	texCoord = (UniformBuffer.model * vec4(texCoords - vec2(0.5, 0.5), 0.0, 0.5)).xy + vec2(0.5, 0.5);
	//texCoord = texCoords;
}

#else

layout (location = 0) out vec4 Color;

layout (location = 0) in vec4 color;
layout (location = 1) in vec2 texCoord;

layout (binding = 1, set = 0) uniform sampler2D tex;

void main() {
	float res = reflect(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 0.0)).z;

	Color = color * texture(tex, texCoord);

}
#endif
